<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="test02.Infrastructure.sql.DepartmentMapper">
    <resultMap id="BaseResultMap" type="test02.Data.DepartmentEntity" >
        <id column="id" property="id" jdbcType="BIGINT" />
        <result column="name" property="name" jdbcType="VARCHAR" />
        <result column="parentId" property="parentId" jdbcType="BIGINT" />
        <result column="idPath" property="idPath" jdbcType="VARCHAR" />
        <result column="namePath" property="namePath" jdbcType="VARCHAR" />
        <result column="createTime" property="createTime" jdbcType="TIMESTAMP" />
        <result column="description" property="description" jdbcType="VARCHAR" />
        <result column="manager" property="manager" jdbcType="VARCHAR" />
        <result column="state" property="state" jdbcType="INTEGER" />
    </resultMap>

    <select id="findAllAsList" parameterType="Long" resultMap="BaseResultMap">
        SELECT id,name,parentId,idPath,namePath,createTime,description,manager,state
        FROM department
        WHERE state=0;
    </select>

    <select id="getByParentId" parameterType="Long" resultMap="BaseResultMap">
        SELECT id,name,parentId,idPath,namePath,createTime,description,manager,state
        FROM department
        WHERE parentId=#{parentId} AND state=0;
    </select>

    <select id="getDepartmentById" parameterType="Long" resultMap="BaseResultMap">
        SELECT id,name,parentId,idPath,namePath,createTime,description,manager,state
        FROM department
        WHERE id=#{id} AND state=0;
    </select>

    <select id="getDepartmentByIdPath" parameterType="String" resultMap="BaseResultMap">
        SELECT id,name,parentId,idPath,namePath,createTime,description,manager,state
        FROM department
        WHERE state=0
        AND idPath LIKE "%"#{idPath}"%";
    </select>

    <insert id="addDepartment" keyColumn="id" parameterType="test02.Data.DepartmentEntity" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO
        department(name,parentId,createTime,description,manager,state)
        VALUES(#{name},#{parentId},#{createTime},#{description},#{manager},#{state});
    </insert>

    <update id="updateDepartment">
        UPDATE department
        SET
        name=#{name},manager=#{manager},description=#{description}
        WHERE id=#{id};
    </update>

    <update id="updateChildNamePath">
        UPDATE department
        SET
        namePath=REPLACE(namePath,#{oldName},#{newName})
        WHERE state=0 AND
        id IN
        <foreach collection="deptIds" index="index" item="deptId" open="(" separator="," close=")">
            #{deptId}
        </foreach>;
    </update>

    <update id="updateDepartmentPath" parameterType="test02.Data.DepartmentEntity" >
        UPDATE department
        SET
        idPath=#{idPath},namePath=#{namePath}
        WHERE id=#{id};
    </update>

    <update id="deleteDepartment" parameterType="Long">
        UPDATE department
        SET
        state=1
        WHERE state=0 AND
        id IN
        <foreach collection="deptIds" index="index" item="deptId" open="(" separator="," close=")">
            #{deptId}
        </foreach>;
    </update>

</mapper>